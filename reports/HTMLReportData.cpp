/**********************************************************************

	--- Qt Architect generated file ---

	File: HTMLReportData.cpp
	Last generated: Tue May 9 15:06:15 2000

	DO NOT EDIT!!!  This file will be automatically
	regenerated by qtarch.  All changes will be lost.

 *********************************************************************/

#include <qpixmap.h>
#include <qlayout.h>
#include "HTMLReportData.h"


HTMLReportData::HTMLReportData(QWidget *parent, const char *name)
               : QWidget(parent, name, 0)
{
    startDateLabel = new QLabel(this, "startDateLabel");
    startDateLabel->setGeometry(5, 5, 27, 26);
    startDateLabel->setMinimumSize(0, 0);
    startDateLabel->setMaximumSize(32767, 32767);
    startDateLabel->setFocusPolicy(QWidget::NoFocus);
    startDateLabel->setBackgroundMode(QWidget::PaletteBackground);
    startDateLabel->setFrameStyle( 0 );
    startDateLabel->setLineWidth( 1 );
    startDateLabel->setMidLineWidth( 0 );
    startDateLabel->QFrame::setMargin( -1 );
    startDateLabel->setText( "Start:" );
    startDateLabel->setAlignment( AlignRight|AlignVCenter|ExpandTabs );
    startDateLabel->setMargin( -1 );

    endDateLabel = new QLabel(this, "EndDateLabel");
    endDateLabel->setGeometry(156, 5, 24, 26);
    endDateLabel->setMinimumSize(0, 0);
    endDateLabel->setMaximumSize(32767, 32767);
    endDateLabel->setFocusPolicy(QWidget::NoFocus);
    endDateLabel->setBackgroundMode(QWidget::PaletteBackground);
    endDateLabel->setFrameStyle( 0 );
    endDateLabel->setLineWidth( 1 );
    endDateLabel->setMidLineWidth( 0 );
    endDateLabel->QFrame::setMargin( -1 );
    endDateLabel->setText( "End:" );
    endDateLabel->setAlignment( AlignRight|AlignVCenter|ExpandTabs );
    endDateLabel->setMargin( -1 );

    generateButton = new QPushButton(this, "GenerateButton");
    generateButton->setGeometry(422, 5, 84, 26);
    generateButton->setMinimumSize(0, 0);
    generateButton->setMaximumSize(32767, 32767);
    generateButton->setFocusPolicy(QWidget::TabFocus);
    generateButton->setBackgroundMode(QWidget::PaletteBackground);
    generateButton->setText( "&Generate" );
    generateButton->setAutoRepeat( FALSE );
    generateButton->setAutoResize( FALSE );
    generateButton->setToggleButton( FALSE );
    generateButton->setDefault( FALSE );
    generateButton->setAutoDefault( FALSE );
    generateButton->setIsMenuButton( FALSE );
    connect(generateButton, SIGNAL(clicked()), SLOT(refreshReport()));

    dateList = new QComboBox(FALSE, this, "DateListBox");
    dateList->setGeometry(303, 5, 114, 25);
    dateList->setMinimumSize(0, 0);
    dateList->setMaximumSize(32767, 32767);
    dateList->setFocusPolicy(QWidget::StrongFocus);
    dateList->setBackgroundMode(QWidget::PaletteBackground);
    dateList->setSizeLimit( 10 );
    dateList->setAutoResize( FALSE );
    dateList->insertItem( "This Month" );
    dateList->insertItem( "Last Month" );
    dateList->insertItem( "This Year" );
    dateList->insertItem( "Last Year" );
    dateList->insertItem( "This Quarter" );
    dateList->insertItem( "Last Quarter" );
    dateList->setMaxCount( 2147483647 );
    dateList->setAutoCompletion( FALSE );
    connect(dateList, SIGNAL(activated(const QString&)), SLOT(dateRangeSelected(const QString&)));

    startDateCal = new DateInput(this, "StartDate");
    startDateCal->setGeometry(37, 5, 114, 26);
    startDateCal->setMinimumSize(0, 25);
    startDateCal->setMaximumSize(32767, 32767);
    startDateCal->setFocusPolicy(QWidget::NoFocus);
    startDateCal->setBackgroundMode(QWidget::PaletteBackground);

    endDateCal = new DateInput(this, "EndDate");
    endDateCal->setGeometry(185, 5, 113, 26);
    endDateCal->setMinimumSize(0, 25);
    endDateCal->setMaximumSize(32767, 32767);
    endDateCal->setFocusPolicy(QWidget::NoFocus);
    endDateCal->setBackgroundMode(QWidget::PaletteBackground);

    body = new QTextView(this, "Body");
    body->setGeometry(5, 36, 501, 233);
    body->setMinimumSize(0, 0);
    body->setMaximumSize(32767, 32767);
    body->setFocusPolicy(QWidget::NoFocus);
    body->setBackgroundMode(QWidget::PaletteBackground);

    filterButton = new QPushButton(this, "FilterButton");
    filterButton->setGeometry(103, 274, 67, 26);
    filterButton->setMinimumSize(0, 0);
    filterButton->setMaximumSize(32767, 32767);
    filterButton->setFocusPolicy(QWidget::TabFocus);
    filterButton->setBackgroundMode(QWidget::PaletteBackground);
    filterButton->setText( "&Filters" );
    filterButton->setAutoRepeat( FALSE );
    filterButton->setAutoResize( FALSE );
    filterButton->setToggleButton( FALSE );
    filterButton->setDefault( FALSE );
    filterButton->setAutoDefault( FALSE );
    filterButton->setIsMenuButton( FALSE );
    connect(filterButton, SIGNAL(clicked()), SLOT(editFilters()));

    userButton = new QPushButton(this, "UserButton");
    userButton->setGeometry(175, 274, 58, 26);
    userButton->setMinimumSize(0, 0);
    userButton->setMaximumSize(32767, 32767);
    userButton->setFocusPolicy(QWidget::TabFocus);
    userButton->setBackgroundMode(QWidget::PaletteBackground);
    userButton->setText( "&User" );
    userButton->setAutoRepeat( FALSE );
    userButton->setAutoResize( FALSE );
    userButton->setToggleButton( FALSE );
    userButton->setDefault( FALSE );
    userButton->setAutoDefault( FALSE );
    userButton->setIsMenuButton( FALSE );
    connect(userButton, SIGNAL(clicked()), SLOT(userButtonClickedInt()));

    graphButton = new QPushButton(this, "GraphButton");
    graphButton->setGeometry(238, 274, 67, 26);
    graphButton->setMinimumSize(0, 0);
    graphButton->setMaximumSize(32767, 32767);
    graphButton->setFocusPolicy(QWidget::TabFocus);
    graphButton->setBackgroundMode(QWidget::PaletteBackground);
    graphButton->setText( "G&raph" );
    graphButton->setAutoRepeat( FALSE );
    graphButton->setAutoResize( FALSE );
    graphButton->setToggleButton( FALSE );
    graphButton->setDefault( FALSE );
    graphButton->setAutoDefault( FALSE );
    graphButton->setIsMenuButton( FALSE );
    connect(graphButton, SIGNAL(clicked()), SLOT(graphReport()));

    printButton = new QPushButton(this, "PrintButton");
    printButton->setGeometry(310, 274, 58, 26);
    printButton->setMinimumSize(0, 0);
    printButton->setMaximumSize(32767, 32767);
    printButton->setFocusPolicy(QWidget::TabFocus);
    printButton->setBackgroundMode(QWidget::PaletteBackground);
    printButton->setText( "&Print" );
    printButton->setAutoRepeat( FALSE );
    printButton->setAutoResize( FALSE );
    printButton->setToggleButton( FALSE );
    printButton->setDefault( FALSE );
    printButton->setAutoDefault( FALSE );
    printButton->setIsMenuButton( FALSE );
    connect(printButton, SIGNAL(clicked()), SLOT(printReport()));

    emailButton = new QPushButton(this, "EmailButton");
    emailButton->setGeometry(373, 274, 63, 26);
    emailButton->setMinimumSize(0, 0);
    emailButton->setMaximumSize(32767, 32767);
    emailButton->setFocusPolicy(QWidget::TabFocus);
    emailButton->setBackgroundMode(QWidget::PaletteBackground);
    emailButton->setText( "E&mail" );
    emailButton->setAutoRepeat( FALSE );
    emailButton->setAutoResize( FALSE );
    emailButton->setToggleButton( FALSE );
    emailButton->setDefault( FALSE );
    emailButton->setAutoDefault( FALSE );
    emailButton->setIsMenuButton( FALSE );
    connect(emailButton, SIGNAL(clicked()), SLOT(emailReport()));

    closeButton = new QPushButton(this, "CloseButton");
    closeButton->setGeometry(441, 274, 65, 26);
    closeButton->setMinimumSize(0, 0);
    closeButton->setMaximumSize(32767, 32767);
    closeButton->setFocusPolicy(QWidget::TabFocus);
    closeButton->setBackgroundMode(QWidget::PaletteBackground);
    closeButton->setText( "&Close" );
    closeButton->setAutoRepeat( FALSE );
    closeButton->setAutoResize( FALSE );
    closeButton->setToggleButton( FALSE );
    closeButton->setDefault( FALSE );
    closeButton->setAutoDefault( FALSE );
    closeButton->setIsMenuButton( FALSE );
    connect(closeButton, SIGNAL(clicked()), SLOT(closeReport()));

	QBoxLayout* qtarch_layout_1 = new QBoxLayout( this, QBoxLayout::TopToBottom, 5, 5, NULL );
	qtarch_layout_1->addStrut( 0 );
	QBoxLayout* qtarch_layout_1_1 = new QBoxLayout( QBoxLayout::LeftToRight, 5, NULL );
	qtarch_layout_1->addLayout( qtarch_layout_1_1, 0 );
	qtarch_layout_1_1->addStrut( 0 );
	qtarch_layout_1_1->addWidget( startDateLabel, 0, 0 );
	qtarch_layout_1_1->addWidget( startDateCal, 1, 0 );
	qtarch_layout_1_1->addWidget( endDateLabel, 0, 0 );
	qtarch_layout_1_1->addWidget( endDateCal, 1, 0 );
	qtarch_layout_1_1->addWidget( dateList, 1, 0 );
	qtarch_layout_1_1->addWidget( generateButton, 0, 0 );
	qtarch_layout_1->addWidget( body, 1, 0 );
	QBoxLayout* qtarch_layout_1_3 = new QBoxLayout( QBoxLayout::LeftToRight, 5, NULL );
	qtarch_layout_1->addLayout( qtarch_layout_1_3, 0 );
	qtarch_layout_1_3->addStrut( 0 );
	qtarch_layout_1_3->addStretch( 1 );
	qtarch_layout_1_3->addWidget( filterButton, 0, 0 );
	qtarch_layout_1_3->addWidget( userButton, 0, 0 );
	qtarch_layout_1_3->addWidget( graphButton, 0, 0 );
	qtarch_layout_1_3->addWidget( printButton, 0, 0 );
	qtarch_layout_1_3->addWidget( emailButton, 0, 0 );
	qtarch_layout_1_3->addWidget( closeButton, 0, 0 );
    resize(511,305);
    setMinimumSize(200, 200);
    setMaximumSize(32767, 32767);
}

HTMLReportData::~HTMLReportData()
{
}
