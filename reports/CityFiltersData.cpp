/**********************************************************************

	--- Qt Architect generated file ---

	File: CityFiltersData.cpp
	Last generated: Sun Apr 11 14:11:05 1999

	DO NOT EDIT!!!  This file will be automatically
	regenerated by qtarch.  All changes will be lost.

 *********************************************************************/

#include <qpixmap.h>
#include <qlayout.h>
#include "CityFiltersData.h"

#define Inherited QDialog

#include <qbttngrp.h>

CityFiltersData::CityFiltersData
(
	QWidget* parent,
	const char* name
)
	:
	Inherited( parent, name, TRUE, 0 )
{
	QButtonGroup* qtarch_ButtonGroup_1;
	qtarch_ButtonGroup_1 = new QButtonGroup( this, "ButtonGroup_1" );
	qtarch_ButtonGroup_1->setGeometry( 10, 10, 250, 90 );
	qtarch_ButtonGroup_1->setMinimumSize( 0, 0 );
	qtarch_ButtonGroup_1->setMaximumSize( 32767, 32767 );
	qtarch_ButtonGroup_1->setFocusPolicy( QWidget::NoFocus );
	qtarch_ButtonGroup_1->setBackgroundMode( QWidget::PaletteBackground );
	qtarch_ButtonGroup_1->setFrameStyle( 49 );
	qtarch_ButtonGroup_1->setTitle( "Active Customer Selection" );
	qtarch_ButtonGroup_1->setAlignment( 1 );

	activeOnlyButton = new QRadioButton( this, "RadioButton_1" );
	activeOnlyButton->setGeometry( 35, 30, 100, 20 );
	activeOnlyButton->setMinimumSize( 0, 0 );
	activeOnlyButton->setMaximumSize( 32767, 32767 );
	activeOnlyButton->setFocusPolicy( QWidget::TabFocus );
	activeOnlyButton->setBackgroundMode( QWidget::PaletteBackground );
	activeOnlyButton->setText( "Active Only" );
	activeOnlyButton->setAutoRepeat( FALSE );
	activeOnlyButton->setAutoResize( FALSE );
	activeOnlyButton->setChecked( TRUE );

	inactiveOnlyButton = new QRadioButton( this, "RadioButton_2" );
	inactiveOnlyButton->setGeometry( 35, 50, 100, 20 );
	inactiveOnlyButton->setMinimumSize( 0, 0 );
	inactiveOnlyButton->setMaximumSize( 32767, 32767 );
	inactiveOnlyButton->setFocusPolicy( QWidget::TabFocus );
	inactiveOnlyButton->setBackgroundMode( QWidget::PaletteBackground );
	inactiveOnlyButton->setText( "Inactive Only" );
	inactiveOnlyButton->setAutoRepeat( FALSE );
	inactiveOnlyButton->setAutoResize( FALSE );

	bothButton = new QRadioButton( this, "RadioButton_3" );
	bothButton->setGeometry( 35, 70, 100, 20 );
	bothButton->setMinimumSize( 0, 0 );
	bothButton->setMaximumSize( 32767, 32767 );
	bothButton->setFocusPolicy( QWidget::TabFocus );
	bothButton->setBackgroundMode( QWidget::PaletteBackground );
	bothButton->setText( "Both" );
	bothButton->setAutoRepeat( FALSE );
	bothButton->setAutoResize( FALSE );

	cancelButton = new QPushButton( this, "CancelButton" );
	cancelButton->setGeometry( 10, 125, 80, 20 );
	cancelButton->setMinimumSize( 0, 0 );
	cancelButton->setMaximumSize( 32767, 32767 );
	connect( cancelButton, SIGNAL(clicked()), SLOT(cancelFilters()) );
	cancelButton->setFocusPolicy( QWidget::TabFocus );
	cancelButton->setBackgroundMode( QWidget::PaletteBackground );
	cancelButton->setText( "&Cancel" );
	cancelButton->setAutoRepeat( FALSE );
	cancelButton->setAutoResize( FALSE );

	applyButton = new QPushButton( this, "ApplyButton" );
	applyButton->setGeometry( 95, 125, 80, 20 );
	applyButton->setMinimumSize( 0, 0 );
	applyButton->setMaximumSize( 32767, 32767 );
	connect( applyButton, SIGNAL(clicked()), SLOT(applyFilters()) );
	applyButton->setFocusPolicy( QWidget::TabFocus );
	applyButton->setBackgroundMode( QWidget::PaletteBackground );
	applyButton->setText( "&Apply" );
	applyButton->setAutoRepeat( FALSE );
	applyButton->setAutoResize( FALSE );

	okayButton = new QPushButton( this, "OkayButton" );
	okayButton->setGeometry( 180, 125, 80, 20 );
	okayButton->setMinimumSize( 80, 20 );
	okayButton->setMaximumSize( 80, 20 );
	connect( okayButton, SIGNAL(clicked()), SLOT(applyAndExit()) );
	okayButton->setFocusPolicy( QWidget::TabFocus );
	okayButton->setBackgroundMode( QWidget::PaletteBackground );
	okayButton->setText( "&Ok" );
	okayButton->setAutoRepeat( FALSE );
	okayButton->setAutoResize( FALSE );
	okayButton->setAutoDefault( TRUE );

	qtarch_ButtonGroup_1->insert( activeOnlyButton );
	qtarch_ButtonGroup_1->insert( inactiveOnlyButton );
	qtarch_ButtonGroup_1->insert( bothButton );

	resize( 270,155 );
	setMinimumSize( 270, 155 );
	setMaximumSize( 270, 155 );
}


CityFiltersData::~CityFiltersData()
{
}
void CityFiltersData::cancelFilters()
{
}
void CityFiltersData::applyFilters()
{
}
void CityFiltersData::applyAndExit()
{
}
