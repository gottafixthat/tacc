/**********************************************************************

	--- Qt Architect generated file ---

	File: Tab_AccountsData.cpp
	Last generated: Thu May 20 16:45:55 1999

	DO NOT EDIT!!!  This file will be automatically
	regenerated by qtarch.  All changes will be lost.

 *********************************************************************/

#include <qpixmap.h>
#include <qlayout.h>
#include "Tab_AccountsData.h"

#define Inherited QWidget


Tab_AccountsData::Tab_AccountsData
(
	QWidget* parent,
	const char* name
)
	:
	Inherited( parent, name, 0 )
{
	newButton = new QPushButton( this, "NewButton" );
	newButton->setGeometry( 18, 225, 90, 25 );
	newButton->setMinimumSize( 90, 25 );
	newButton->setMaximumSize( 90, 25 );
	connect( newButton, SIGNAL(clicked()), SLOT(createNewLogin()) );
	newButton->setFocusPolicy( QWidget::TabFocus );
	newButton->setBackgroundMode( QWidget::PaletteBackground );
	newButton->setText( "&New" );
	newButton->setAutoRepeat( FALSE );
	newButton->setAutoResize( FALSE );

	editButton = new QPushButton( this, "EditButton" );
	editButton->setGeometry( 139, 225, 90, 25 );
	editButton->setMinimumSize( 90, 25 );
	editButton->setMaximumSize( 90, 25 );
	connect( editButton, SIGNAL(clicked()), SLOT(editLogin()) );
	editButton->setFocusPolicy( QWidget::TabFocus );
	editButton->setBackgroundMode( QWidget::PaletteBackground );
	editButton->setText( "&Edit" );
	editButton->setAutoRepeat( FALSE );
	editButton->setAutoResize( FALSE );

	modemUsageButton = new QPushButton( this, "ModemUsage" );
	modemUsageButton->setGeometry( 260, 225, 90, 25 );
	modemUsageButton->setMinimumSize( 90, 25 );
	modemUsageButton->setMaximumSize( 90, 25 );
	connect( modemUsageButton, SIGNAL(clicked()), SLOT(modemUsageReport()) );
	modemUsageButton->setFocusPolicy( QWidget::TabFocus );
	modemUsageButton->setBackgroundMode( QWidget::PaletteBackground );
	modemUsageButton->setText( "&Modem Usage" );
	modemUsageButton->setAutoRepeat( FALSE );
	modemUsageButton->setAutoResize( FALSE );

	openCloseButton = new QPushButton( this, "OpenButton" );
	openCloseButton->setGeometry( 381, 225, 90, 25 );
	openCloseButton->setMinimumSize( 90, 25 );
	openCloseButton->setMaximumSize( 90, 25 );
	connect( openCloseButton, SIGNAL(clicked()), SLOT(unlockLogin()) );
	openCloseButton->setFocusPolicy( QWidget::TabFocus );
	openCloseButton->setBackgroundMode( QWidget::PaletteBackground );
	openCloseButton->setText( "&Open/Close" );
	openCloseButton->setAutoRepeat( FALSE );
	openCloseButton->setAutoResize( FALSE );

	hideWiped = new QCheckBox( this, "HideWiped" );
	hideWiped->setGeometry( 502, 255, 90, 25 );
	hideWiped->setMinimumSize( 90, 25 );
	hideWiped->setMaximumSize( 90, 25 );
	connect( hideWiped, SIGNAL(toggled(bool)), SLOT(hideWipedChanged(bool)) );
	hideWiped->setFocusPolicy( QWidget::TabFocus );
	hideWiped->setBackgroundMode( QWidget::PaletteBackground );
	hideWiped->setText( "Hide Wiped" );
	hideWiped->setAutoRepeat( FALSE );
	hideWiped->setAutoResize( FALSE );
	hideWiped->setChecked( TRUE );

	passwdButton = new QPushButton( this, "PasswordButton" );
	passwdButton->setGeometry( 502, 225, 90, 25 );
	passwdButton->setMinimumSize( 90, 25 );
	passwdButton->setMaximumSize( 90, 25 );
	connect( passwdButton, SIGNAL(clicked()), SLOT(changePassword()) );
	passwdButton->setFocusPolicy( QWidget::TabFocus );
	passwdButton->setBackgroundMode( QWidget::PaletteBackground );
	passwdButton->setText( "&Password" );
	passwdButton->setAutoRepeat( FALSE );
	passwdButton->setAutoResize( FALSE );

	adminMenuArea = new QLabel( this, "AdminMenu" );
	adminMenuArea->setGeometry( 18, 255, 90, 25 );
	adminMenuArea->setMinimumSize( 90, 25 );
	adminMenuArea->setMaximumSize( 90, 25 );
	adminMenuArea->setFocusPolicy( QWidget::NoFocus );
	adminMenuArea->setBackgroundMode( QWidget::PaletteBackground );
	adminMenuArea->setLineWidth( 2 );
	adminMenuArea->setText( "Admin Menu" );
	adminMenuArea->setAlignment( 289 );
	adminMenuArea->setMargin( -1 );

	list = new QListView( this, "List" );
	list->setGeometry( 5, 5, 600, 215 );
	list->setMinimumSize( 0, 0 );
	list->setMaximumSize( 32767, 32767 );
	list->setFocusPolicy( QWidget::StrongFocus );
	list->setBackgroundMode( QWidget::PaletteBackground );
	list->setResizePolicy( QScrollView::Manual );
	list->setVScrollBarMode( QScrollView::Auto );
	list->setHScrollBarMode( QScrollView::Auto );
	list->setTreeStepSize( 20 );
	list->setMultiSelection( FALSE );
	list->setAllColumnsShowFocus( TRUE );
	list->setItemMargin( 1 );
	list->setRootIsDecorated( TRUE );
	list->addColumn( "Login ID", -1 );
	list->setColumnWidthMode( 0, QListView::Maximum );
	list->setColumnAlignment( 0, 1 );
	list->addColumn( "Description", -1 );
	list->setColumnWidthMode( 1, QListView::Maximum );
	list->setColumnAlignment( 1, 1 );
	list->addColumn( "Last Date", -1 );
	list->setColumnWidthMode( 2, QListView::Maximum );
	list->setColumnAlignment( 2, 1 );
	list->addColumn( "Ends On", -1 );
	list->setColumnWidthMode( 3, QListView::Maximum );
	list->setColumnAlignment( 3, 1 );
	list->addColumn( "ID", -1 );
	list->setColumnWidthMode( 4, QListView::Maximum );
	list->setColumnAlignment( 4, 2 );
	list->addColumn( "Qty", -1 );
	list->setColumnWidthMode( 5, QListView::Maximum );
	list->setColumnAlignment( 5, 2 );
	list->addColumn( "Price", -1 );
	list->setColumnWidthMode( 6, QListView::Maximum );
	list->setColumnAlignment( 6, 2 );
	list->addColumn( "Amount", -1 );
	list->setColumnWidthMode( 7, QListView::Maximum );
	list->setColumnAlignment( 7, 4 );
	list->addColumn( "Active", -1 );
	list->setColumnWidthMode( 8, QListView::Maximum );
	list->setColumnAlignment( 8, 1 );

	QBoxLayout* qtarch_layout_1 = new QBoxLayout( this, QBoxLayout::TopToBottom, 5, 5, NULL );
	qtarch_layout_1->addStrut( 0 );
	qtarch_layout_1->addWidget( list, 1, 36 );
	QGridLayout* qtarch_layout_1_2 = new QGridLayout( 2, 5, 5, NULL );
	qtarch_layout_1->addLayout( qtarch_layout_1_2, 0 );
	qtarch_layout_1_2->addColSpacing( 0, 5 );
	qtarch_layout_1_2->setColStretch( 0, 1 );
	qtarch_layout_1_2->addColSpacing( 1, 5 );
	qtarch_layout_1_2->setColStretch( 1, 1 );
	qtarch_layout_1_2->addColSpacing( 2, 5 );
	qtarch_layout_1_2->setColStretch( 2, 1 );
	qtarch_layout_1_2->addColSpacing( 3, 5 );
	qtarch_layout_1_2->setColStretch( 3, 1 );
	qtarch_layout_1_2->addColSpacing( 4, 5 );
	qtarch_layout_1_2->setColStretch( 4, 1 );
	qtarch_layout_1_2->addRowSpacing( 0, 0 );
	qtarch_layout_1_2->setRowStretch( 0, 0 );
	qtarch_layout_1_2->addWidget( newButton, 0, 0, 36 );
	qtarch_layout_1_2->addWidget( editButton, 0, 1, 36 );
	qtarch_layout_1_2->addWidget( modemUsageButton, 0, 2, 36 );
	qtarch_layout_1_2->addWidget( openCloseButton, 0, 3, 36 );
	qtarch_layout_1_2->addWidget( passwdButton, 0, 4, 36 );
	qtarch_layout_1_2->addRowSpacing( 1, 0 );
	qtarch_layout_1_2->setRowStretch( 1, 0 );
	qtarch_layout_1_2->addWidget( adminMenuArea, 1, 0, 36 );
	qtarch_layout_1_2->addWidget( hideWiped, 1, 4, 36 );
	resize( 610,285 );
	setMinimumSize( 0, 0 );
	setMaximumSize( 32767, 32767 );
}


Tab_AccountsData::~Tab_AccountsData()
{
}
void Tab_AccountsData::createNewLogin()
{
}
void Tab_AccountsData::editLogin()
{
}
void Tab_AccountsData::modemUsageReport()
{
}
void Tab_AccountsData::unlockLogin()
{
}
void Tab_AccountsData::hideWipedChanged(bool)
{
}
void Tab_AccountsData::changePassword()
{
}
